from aiogram import types
from aiogram.types import Message

from services.profile import profile
from services.auth import auth

student_menu = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üë®‚Äçüè´ –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data="student_view_teachers")
        ],
        [
            types.InlineKeyboardButton(text="üóìÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π",
                                       callback_data="student_view_consultations")
        ],
        [
            types.InlineKeyboardButton(text="‚úèÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="student_book_consultation"),
            types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="student_cancel_booking")
        ],
        [
            types.InlineKeyboardButton(text="üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è",
                                       callback_data="student_subscribe_teacher"),
            types.InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="student_create_request")
        ],
        [
            types.InlineKeyboardButton(text="üìÑ –ú–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="student_view_requests")
        ],
        [
            types.InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
            types.InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="menu_logout")
        ]
    ]
)

teacher_menu = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üóìÔ∏è –ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", callback_data="teacher_my_consultations")
        ],
        [
            types.InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="teacher_create_consultation"),
            types.InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é",
                                       callback_data="teacher_consultation_students")
        ],
        [
            types.InlineKeyboardButton(text="üîí –ó–∞–∫—Ä—ã—Ç—å –∑–∞–ø–∏—Å—å", callback_data="teacher_close_consultation"),
            types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="teacher_cancel_consultation")
        ],
        [
            types.InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
                                       callback_data="teacher_create_from_request")
        ],
        [
            types.InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
            types.InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="menu_logout")
        ]
    ]
)

teacher_unconfirmed_menu = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
            types.InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="menu_logout")
        ]
    ]
)

guest_menu = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üîë –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / –í—Ö–æ–¥", callback_data="start")
        ]
    ]
)


async def show_main_menu(message: Message, role: str | None, edit_message: types.Message | None = None):
    telegram_id = message.from_user.id
    first_name, last_name = await auth.get_user_name(telegram_id)

    if role == "student":
        greeting = f"üéì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name} {last_name}."
        keyboard = student_menu
    elif role == "teacher":
        status = await profile.get_teacher_status(telegram_id)
        greeting = f"üë®‚Äçüè´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name} {last_name}."

        if status == "active":
            keyboard = teacher_menu
        else:
            greeting += "\n\n‚è≥ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n–ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏." if status == "pending" else "\n\n‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏."
            keyboard = teacher_unconfirmed_menu
    else:
        greeting = "üëã –ü—Ä–∏–≤–µ—Ç!\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É üëá"
        keyboard = guest_menu

    if edit_message:
        await edit_message.edit_text(greeting, reply_markup=keyboard)
    else:
        await message.answer(greeting, reply_markup=keyboard)
